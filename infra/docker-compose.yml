version: "3.8"

networks:
  contextify-net:
    driver: bridge

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    networks:
      - contextify-net
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_4LW_COMMANDS_WHITELIST=*
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    networks:
      - contextify-net
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server localhost:9092 --list",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  contextify:
    container_name: contextify
    build:
      context: ../backend/services/contextify
      dockerfile: Dockerfile
    networks:
      - contextify-net
    ports:
      - "8082:8080"
      - "50051:50051"
    environment:
      - REST_PORT=8080
      - GRPC_PORT=50051
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  anomaly:
    container_name: anomaly
    build:
      context: ../backend/services/anomaly
      dockerfile: Dockerfile
    networks:
      - contextify-net
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - HTTP_PORT=8081
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8081/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  anomaly-producer:
    container_name: anomaly-producer
    build:
      context: ../backend/services/anomaly
      dockerfile: Dockerfile.producer
    networks:
      - contextify-net
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=kafka:9092
    healthcheck:
      test:
        [
          "CMD",
          "ps",
          "aux",
          "|",
          "grep",
          "anomaly-producer",
          "|",
          "grep",
          "-v",
          "grep",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
